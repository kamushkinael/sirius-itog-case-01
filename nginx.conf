worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    upstream core-upstream {
        server core-service:80;
    }

    upstream math-upstream {
        server math-service:80;
    }


    map $http_x_rpc_method $target_service {
        hostnames;

        math.*    math-upstream;
        default   core-upstream;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location /rpc {
            if ($request_method != POST) {  
                return 405;
            }

            if ($http_x_client_id != "sirius-frontend") {
                return 401 "Client ID required";
            }

            if ($http_x_client_secret = "") {
                return 401 "Client Secret required";
            }

            if ($http_x_rpc_method = "") {
                return 400 "RPC method required";
            }

            if ($content_type != "application/json") {
                return 400 "Content-Type must be application/json";
            }

            client_max_body_size 64;
            client_body_buffer_size 64;
            proxy_read_timeout 1s;
            proxy_connect_timeout 1s;
            proxy_send_timeout 1s;

            proxy_pass http://$target_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Rpc-Method $http_x_rpc_method;
        }
    }
}